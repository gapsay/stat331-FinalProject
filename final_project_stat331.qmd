---
title: "Final Project STAT 331"
author: "Emma Turilli, John Ieng, Nat Sakamoto, Gabby Apsay"
format: 
  html:
    code-tools: true
    toc: true
    embed-resources: true
    code-fold: true
editor: source
execute: 
  error: true
  echo: false
  message: false
  warning: false
---

```{r packages}
#| include: false

library(tidyverse)
library(knitr)
library(gganimate)
library(broom)
library(gifski)
```

### Reproducibility

All code, raw data, and project files are available in our [GitHub Repository](https://github.com/gapsay/stat331-FinalProject/tree/main). Feel free to explore or replicate our analysis!

# 1 Project Proposal + Data

This analysis utilizes the [life expectancy](https://www.gapminder.org/data/) and the [gross domestic product](https://www.gapminder.org/data/) (GDP) datasets sourced [Gapminder](https://www.gapminder.org/about/about-gapminder/), a non-profit organization whose mission “is to fight devastating ignorance with a fact-based world view everyone could understand.” Their site provides data sets collected from many reputable sources and interactive visualizations on important world topics.

```{r data}
lex_raw <- read.csv("../stat331-FinalProject/lex.csv")
gdp_pcap_raw <- read.csv("../stat331-FinalProject/gdp_pcap.csv")
continents_raw <- read_csv("../stat331-FinalProject/country_by_continents.csv")
```

## 1.1 Data Cleaning

In the raw GDP dataset, some values included a “k” suffix to represent thousands of dollars (e.g., 10,000 to 10k). The first step is to figure out a way to convert GDP values into numeric form. To keep values constant, we created a function that converts these abbreviated values into their full numeric form, allowing for accurate numeric comparisons. Without this step, any observations containing a “k” would be dropped, leaving it empty and could potentially affecting later analysis.

```{r}
clean_year <- function(str) {
  str <- case_when(
    str_detect(str, "k$") ~
      as.numeric(str_replace_all(str, "k$", "")) * 1000,
    .default = as.numeric(str)
  )
  return(str)
}
```

## 1.2 Pivoting Longer

The life expectancy data contains information about the life expectancy for 196 countries from the year 1800 to 2100. It provides the life expectancy in years for each country within the set. For the period from 1800 to 1970, the data was sourced from Gapminder’s main source v7: by Mattias Lindgren. Data for 1950-2019 was from the Global Burden of Disease Study 2019, which has 1950-2019 from the IHME. For 2020-2100, Gapminder used UN forecasts from the World Population Prospects 2022.

**Life Expectancy Info from:** <https://www.gapminder.org/data/documentation/gd004>

```{r}
# pivot year columns to a single year and life expectancy column
lex <- lex_raw |>
  pivot_longer(
    cols = X1800:X2100,
    names_to = "year",
    values_to = "life_expectancy"
  ) |>
  mutate(
    year = str_sub(year, start = 2),
    year = as.factor(year)
  )
```

The GDP data was obtained from the Madison Project Database (MPD) and Penn World Table (PWT). This data set contains information on gross domestic product (GDP) per person adjusted for differences in purchasing power in international dollars, and fixed 2017 prices. GDP per capita measures the value of everything a country produces during a year, divided by the number of people. We transformed the data to have columns containing the country, year, and GDP of interest.

**GDP Info from:** <https://www.gapminder.org/data/documentation/gd001/>

```{r}
# pivot year columns to a single year and gdp column
gdp_pcap <- gdp_pcap_raw |>
  mutate(across(
    .cols = X1800:X2100,
    .fns = ~ clean_year(.x)
  )) |>
  pivot_longer(
    cols = X1800:X2100,
    names_to = "year",
    values_to = "gdp"
  ) |>
  mutate(
    year = str_sub(year, start = 2),
    year = as.factor(year),
    gdp = as.numeric(gdp)
  )
```

We transformed each of the individual year columns into one singular column so that the dataset would be easier to read. As a result, each observation consists of one country and year, with the corresponding life expectancy. The raw GDP data is similar to the life expectancy data in that each year has its own column. So we transformed the data in a similar way, making year its own column with its corresponding GDP.

## 1.3 Joining Datasets

```{r}
# join both tables by country and year
gdp_lex <- lex |>
  full_join(
    gdp_pcap,
    join_by(
      country == country,
      year == year
    )
  ) |>
  na.omit()

head(gdp_lex) |>
  kable()
```

```{r}
country_mapping <- tibble(
  continent_name = c(
    "Burkina", "Burma (Myanmar)", "Congo", "Czechia",
    "Democratic Republic of Congo", "East Timor", "Hong Kong", 
    "Ivory Coast", "Kyrgyzstan", "Laos", "Macedonia", "Micronesia",
    "Saint Kitts and Nevis", "Saint Lucia", 
    "Saint Vincent and the Grenadines", "Slovakia", "Swaziland",
    "United Arab Emirates", "United Kingdom", "United States"
  ),
  gdp_name = c(
    "Burkina Faso", "Myanmar", "Congo, Rep.", "Czech Republic",
    "Congo, Dem. Rep.", "Timor-Leste", "Hong Kong, China",
    "Cote d'Ivoire", "Kyrgyz Republic", "Lao",
    "North Macedonia", "Micronesia, Fed. Sts.", "St. Kitts and Nevis",
    "St. Lucia", "St. Vincent and the Grenadines",
    "Slovak Republic", "Eswatini", "UAE", "UK", "USA"
  )
)

continents <- continents_raw |>
  left_join(country_mapping, by = c("Country" = "continent_name")) |>
  mutate(Country = if_else(!is.na(gdp_name), gdp_name, Country)) |>
  select(-gdp_name)

# Join both datasets to assign continent value to all countries 
gdp_lex <- left_join(gdp_lex, continents, 
                     by = c("country" = "Country"))

```

After cleaning up each data set, we had to join the two together by our observational unit, country. We hypothesize that as GDP increases, life expectancy will also begin to increase, as a higher GDP correlates to better infrastructure and more/better access to healthcare and medicine.

# 2 Linear Regressions

## 2.1 Data Visualization

```{r}
# Relationship
gdp_lex2 <- gdp_lex |>
  # had to make year an integer
  mutate(year = as.integer(year)) |> 
  group_by(country)

ggplot(
  data = gdp_lex,
  mapping = aes(
    x = gdp,
    y = life_expectancy
  )
) +
  geom_point(alpha = 0.5) +
  geom_jitter(width = 4)
  
# GIF attempt
#   labs(title = 'Year: {year}', x = 'GDP per capita', y = 'life expectancy') +
#   transition_time(year) +
#   ease_aes('linear')
# 
# # animate(
# #   anim + ease_aes(x = 'bounce-out') + enter_fly(x_loc = -1) + exit_fade(),
# #   width = 400, height = 600, res = 35)

```
## 2.2 Linear Regression
```{r}
gdp_lex3<- gdp_lex |>
  group_by(country) |>
  # averaged dp across all years per country
  mutate(avg_gdp = mean(gdp, na.rm = TRUE))

gdp_lex_lm <- lm(life_expectancy ~ avg_gdp, data = gdp_lex3)

summary(gdp_lex_lm)|>
  head(3)

augment(gdp_lex_lm)

```

## 2.3 
```{r}
#residuals vs fitted plot
gdp_lex_lm |> 
  augment() |> 
  ggplot(aes(x = .fitted, y = .resid)) +
  #specify the points by continent
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", 
             color = "red", lwd = 1.5)

#The variance in the response values.
res_var <- var(augment(gdp_lex_lm)$life_expectancy)

#variance in the fitted values from your regression model
fitted_var <- var(augment(gdp_lex_lm)$.fitted)

#The variance in the residuals from your regression model.
resid_var <- var(augment(gdp_lex_lm)$.resid)


# create matrix with 4 columns and 4 rows
data= matrix(c(res_var, fitted_var, resid_var), ncol=3, byrow=TRUE)
 
# specify the column names and row names of matrix
colnames(data) = c('response variance','fitted values variance','residuals variance')
rownames(data) <- c("value")
 
# assign to table
final=as.table(data)
 
# display
final |>
  kable()

```

